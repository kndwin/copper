// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
	output = "./gen.ts"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  expires      DateTime
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
	reviews				Review[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Review {
	id            String    @id @default(cuid())
	userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
	socialFacebook String?
	socialInstagram String?
	review String?
	coffee Quality?
	food   Quality?
	powerpoints Powerpoints?
	wifi Wifi?
}

model PlaceDetails {
	placeId            String    @id 
	name String?
	formattedAddress String?
	formattedPhoneNumber String?
	website String?
	openingHours Json?
	geometry Json?
}

enum Quality {
	NONE
	POOR
	OKAY
	GOOD
}
enum Powerpoints {
	NONE
	LIMITED
	MANY
}

enum Wifi {
	NONE
	WEAK
	STRONG
}
